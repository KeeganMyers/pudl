"""Add service territories to metadata.

Revision ID: 8fa2e74d110d
Revises: 5b87e23a41c6
Create Date: 2023-05-16 10:18:57.001020
"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "8fa2e74d110d"
down_revision = "29d443aadf25"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "compiled_geometry_balancing_authority_eia861",
        sa.Column(
            "county_id_fips",
            sa.Text(),
            nullable=False,
            comment="County ID from the Federal Information Processing Standard Publication 6-4.",
        ),
        sa.Column(
            "county_name_census",
            sa.Text(),
            nullable=True,
            comment="County name as specified in Census DP1 Data.",
        ),
        sa.Column(
            "population",
            sa.Float(),
            nullable=True,
            comment="County population, sourced from Census DP1 data.",
        ),
        sa.Column("area_km2", sa.Float(), nullable=True, comment="County area in km2."),
        sa.Column("report_date", sa.Date(), nullable=False, comment="Date reported."),
        sa.Column(
            "balancing_authority_id_eia",
            sa.Integer(),
            nullable=False,
            comment="EIA balancing authority ID. This is often (but not always!) the same as the utility ID associated with the same legal entity.",
        ),
        sa.Column(
            "state",
            sa.Text(),
            nullable=True,
            comment="Two letter US state abbreviation.",
        ),
        sa.Column("county", sa.Text(), nullable=False, comment="County name."),
        sa.Column(
            "state_id_fips",
            sa.Text(),
            nullable=True,
            comment="Two digit state FIPS code.",
        ),
        sa.PrimaryKeyConstraint(
            "balancing_authority_id_eia", "report_date", "county_id_fips", "county"
        ),
    )
    op.create_table(
        "compiled_geometry_utility_eia861",
        sa.Column(
            "county_id_fips",
            sa.Text(),
            nullable=False,
            comment="County ID from the Federal Information Processing Standard Publication 6-4.",
        ),
        sa.Column(
            "county_name_census",
            sa.Text(),
            nullable=True,
            comment="County name as specified in Census DP1 Data.",
        ),
        sa.Column(
            "population",
            sa.Float(),
            nullable=True,
            comment="County population, sourced from Census DP1 data.",
        ),
        sa.Column("area_km2", sa.Float(), nullable=True, comment="County area in km2."),
        sa.Column("report_date", sa.Date(), nullable=False, comment="Date reported."),
        sa.Column(
            "utility_id_eia",
            sa.Integer(),
            nullable=False,
            comment="The EIA Utility Identification number.",
        ),
        sa.Column(
            "state",
            sa.Text(),
            nullable=True,
            comment="Two letter US state abbreviation.",
        ),
        sa.Column("county", sa.Text(), nullable=True, comment="County name."),
        sa.Column(
            "state_id_fips",
            sa.Text(),
            nullable=True,
            comment="Two digit state FIPS code.",
        ),
        sa.PrimaryKeyConstraint("utility_id_eia", "report_date", "county_id_fips"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("compiled_geometry_utility_eia861")
    op.drop_table("compiled_geometry_balancing_authority_eia861")
    # ### end Alembic commands ###
